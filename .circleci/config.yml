version: 2.1
jobs:
  #Ubuntu
  test_ubuntu:
    docker:
      - image: cimg/rust:1.64.0
    steps:
      - checkout
      # - run: 'curl https://sh.rustup.rs -sSf | sh -s -- -y'
      # - run: source ~/.cargo/env
      - run: sudo apt install -y libgtk-3-dev
      - run: sudo apt install -y libwebkit2gtk-4.0-dev
      - run: sudo apt install -y protobuf-compiler
      - run:
          name: Test
          command: cargo test

  build_ubuntu:
    docker:
      - image: cimg/rust:1.64.0
    steps:
      - checkout
      # - run: 'curl https://sh.rustup.rs -sSf | sh -s -- -y'
      # - run: source ~/.cargo/env
      - run: sudo apt install -y libgtk-3-dev
      - run: sudo apt install -y libwebkit2gtk-4.0-dev
      - run: sudo apt install -y protobuf-compiler
      - run:
          name: Build Binary
          command: cargo build --release
      - run:
          name: Compress Artifacts (Bin)
          command: zip -r bin.zip target/release/warp_gui
      - store_artifacts:
          path: bin.zip
          destination: /ubuntu/bin.zip
      - store_artifacts:
          path: /ubuntu
  # Windows
  # test_windows:
  #   win: circleci/windows@4.1.1
  #   steps:
  #     - checkout
  #     - ECHO Y | Set-ExecutionPolicy Bypass -Scope Process
  #     - Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
  #     - choco install rustup.install
  # MacOS
  test_macos:
    macos:
      xcode: 14.0
    steps:
      - checkout
      - run: brew update
      - run: brew install protobuf
      - run: 'curl https://sh.rustup.rs -sSf | sh -s -- -y'
      - run: source ~/.cargo/env
      - run: cargo --version
      - run: rustup default stable
      - run:
          name: Run Tests
          command: cargo test

  build_macos:
    macos:
      xcode: 14.0
    steps:
      - checkout
      - run: brew update
      - run: brew install protobuf
      - run: 'curl https://sh.rustup.rs -sSf | sh -s -- -y'
      - run: source ~/.cargo/env
      - run: cargo --version
      - run: rustup default stable
      - run:
          name: Make Bin
          command: make binary
      - run:
          name: Make DMG
          command: make dmg
      - run:
          name: Make .app
          command: make app
      - run:
          name: Compress Artifacts (App)
          command: zip -r app.zip target/release-lto/macos/WarpGUI.app
      - run:
          name: Compress Artifacts (DMG)
          command: zip -r dmg.zip target/release-lto/macos/WarpGUI.DMG
      - run:
          name: Compress Artifacts (Bin)
          command: zip -r bin.zip target/release-lto/warpgui
      - store_artifacts:
          path: app.zip
          destination: /macos/app.zip
      - store_artifacts:
          path: dmg.zip
          destination: /macos/dmg.zip
      - store_artifacts:
          path: bin.zip
          destination: /macos/bin.zip
      - store_artifacts:
          path: /macos

workflows:
  test_and_build:
    jobs:
      - test_macos
      - test_ubuntu
      - build_macos:
          requires:
            - test_macos
      - build_ubuntu:
          requires:
            - test_ubuntu
